// ===================================================== MIXINS =====================================================
@mixin background-opacity($color, $opacity: 0.85) {
	background: $color;
	background: rgba($color, $opacity);
}

@mixin grad($topColour, $bottomColour) {
	background: -webkit-linear-gradient(top, $topColour 0%, $bottomColour 100%) no-repeat scroll;
	background: -moz-linear-gradient(top, $topColour 0%, $bottomColour 100%) no-repeat scroll;
	background: linear-gradient(to bottom, $topColour 0%, $bottomColour 100%) no-repeat scroll;
	background-color: $topColour;
	background-repeat: no-repeat;
	background-attachment: scroll;
}

@mixin slim-underline {
	text-decoration: none;
	background-image: linear-gradient( to bottom, rgba( 0, 0, 0, 0 ) 75%, #000 50% );
	background-repeat: repeat-x;
	background-size: 2px 2px;
	background-position: 0 1em;

	&:hover,
	&:active,
	&:focus {
		background-size: 2px 6px;
		background-position: 0 0.8em;
	}

	@media not all,
	only screen and ( min-resolution: 2dppx ),
	only screen and ( -webkit-min-device-pixel-ratio: 2 ) {
		background-image: linear-gradient( to bottom, rgba( 0, 0, 0, 0 ) 75%, #000 75% );
		background-repeat: repeat-x;
	}
}

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}

	@-moz-keyframes #{$name} {
		@content;
	}

	@keyframes #{$name} {
		@content;
	}
}

@mixin base-font-size {
	font-size: #{base-font(size)}em;
}

@mixin base-font-line-height {
	line-height: base-font(line-height);
}

@mixin base-font-weight {
	font-weight: base-font(weight);
}

@mixin base-font-colour {
	color: base-font(colour);
}

@mixin base-font-face {
	font-family: $base-font-face;
}

@mixin base-mono-font-line-height {
	line-height: base-mono-font(line-height);
}

@mixin base-mono-font-weight {
	font-weight: base-mono-font(weight);
}

@mixin base-mono-font-face {
	font-family: $base-mono-font-face;
}

@mixin button-grad($base) {
	color: blackorwhite($base) !important;
	text-shadow: 0 0 3px desaturate(lighten($base, 10%), 2%);

	@include grad(desaturate(lighten($base, 15%), 5%), $base);

	border-color: desaturate(lighten($base, 2%), 10%);

	&:focus,
	&:hover,
	&:active {
		border-color: darken($base, 5%);
	}

	&:focus,
	&:hover {
		@include grad(desaturate(lighten($base, 20%), 5%), lighten($base, 2%));
	}

	&:active {
		box-shadow: 0 0 3px rgba(0, 0, 0, 0.4), inset 0 2px 4px rgba(0, 0, 0, 0.15);
	}

	&:visited {
		color: blackorwhite($base) !important;
	}

	&.disabled,
	&:disabled {
		&:hover,
		&:focus,
		&:active {
			@include grad(desaturate(lighten($base, 15%), 5%), $base);

			border-color: desaturate(lighten($base, 2%), 10%);

			box-shadow: none;
		}
	}
}

@mixin button {
	width: auto;
	padding: 0 0.75em;

	display: inline-block;

	@include base-font-colour;
	@include base-font-size;
	font-weight: base-font(weight);
	text-align: center;
	text-decoration: none;
	line-height: 2.1;
	vertical-align: middle;
	white-space: nowrap;

	@include grad(map-get($button-base, top), map-get($button-base, bottom));

	border: 1px map-get($button-base, border) solid;
	border-radius: $border-radius;

	-webkit-transition: background ease 200ms, border ease 200ms, box-shadow ease 200ms, opacity ease 400ms;
	transition: background ease 200ms, border ease 200ms, box-shadow ease 200ms, opacity ease 400ms;

	cursor: pointer;

	-webkit-box-sizing: content-box;
	-moz-box-sizing: content-box;
	box-sizing: content-box;

	&:focus,
	&:hover,
	&:active {
		@include base-font-colour;

		border-color: #AAA;

		-webkit-transition: background ease 50ms, border ease 50ms, box-shadow ease 50ms, opacity ease 100ms;
		transition: background ease 50ms, border ease 50ms, box-shadow ease 50ms, opacity ease 100ms;
	}

	&:focus,
	&:hover {
		box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
	}

	&:active {
		box-shadow: 0 0 4px rgba(0, 0, 0, 0.25), inset 0 1px 3px rgba(0, 0, 0, 0.25);
	}

	&:visited {
		@include base-font-colour;
	}

	&.tiny {
		font-size: #{base-font(size) * exponent(1.2, -2)}em;
	}

	&.small {
		font-size: #{base-font(size) * exponent(1.2, -1)}em;
	}

	&.large {
		font-size: #{base-font(size) * exponent(1.2, 1)}em;
	}

	&.huge {
		font-size: #{base-font(size) * exponent(1.2, 2)}em;
	}

	&.thin {
		padding-right: 0.5em;
		padding-left: 0.5em;

		height: 1.5em;

		line-height: 1.5;
	}

	&.fat {
		padding-right: 1em;
		padding-left: 1em;

		height: 2.7em;

		line-height: 2.7;
	}

	&.disabled,
	&:disabled {
		opacity: 0.4;

		&:hover,
		&:focus,
		&:active {
			@include grad(map-get($button-base-hover, top), map-get($button-base-hover, bottom));

			border-color: map-get($button-base-hover, border);

			box-shadow: none;
		}
	}

	@each $button-colour-name, $button-hex in $button-colours {
		&.#{$button-colour-name} {
			@include button-grad($button-hex);
		}
	}
}

@mixin blockform {
	text-align: left;

	label {
		width: auto;
		margin-bottom: 0.2em;
		margin-left: 0.2em;

		display: inline-block;
	}

	input,
	select,
	textarea,
	.label,
	.twistupload-wrapper {
		width: 100%;
		margin-top: 0;

		float: none;
		clear: both;

		&[class^="inline-"],
		&[class*=" inline-"] {
			float: left;

			+ [class^="inline-"],
			+ [class*=" inline-"] {
				margin-left: 1%;

				clear: none;
			}
		}
	}

	input,
	select,
	.label {
		@for $splitInput from 2 through 8 {
			&.inline-#{$splitInput} {
				width: ( 100% - ( $splitInput - 1 ) ) / $splitInput;
			}
		}
	}

	.label {
		width: 100%;
		margin-bottom: 0.2em;
	}

	input[type="checkbox"],
	input[type="radio"] {
		width: auto;
		margin-right: 0.5em;
		margin-left: 0.5em;

		display: inline-block;

		float: left;
	}

	input[type="checkbox"] {
		margin-top: 0.65em;

		clear: none;
	}

	input[type="radio"] {
		margin-top: 0.45em;

		+ label {
			margin-top: 0.25em;
			margin-bottom: 0.25em;

			display: inline-block;
		}
	}

	&.large {
		input {
			&[type="checkbox"] {
				margin-top: 1.65em;
			}
		}
	}
}